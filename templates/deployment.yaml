apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "clowder.fullname" . }}
  labels:
{{ include "clowder.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "clowder.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "clowder.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.userid }}
        runAsGroup: {{ .Values.groupid }}
      initContainers:
        - name: check-mongo
          image: "{{ $.Values.image.checks }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}
                  key: mongodb-uri
        - name: setup-data-folder
          image: busybox:latest
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              mkdir -p {{ .Values.tempfolder }} &&
              chown "{{ .Values.userid }}:{{ .Values.groupid }}" /home/clowder/data {{ .Values.tempfolder }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
{{- if not (or .Values.storage.s3 .Values.minio.enabled) }}
          - name: data
            mountPath: /home/clowder/data
{{- end }}
          {{- with .Values.extraVolumeMounts }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /home/clowder/clowder.sh
            - -mem {{ .Values.memory }}
            - -Djava.io.tmpdir={{ .Values.tempfolder }}
{{- range .Values.extraOptions }}
            - {{ . }}
{{- end }}
          ports:
            - name: clowder
              containerPort: 9000
              protocol: TCP
          env:
            - name: CLOWDER_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}
                  key: clowder-key
            - name: CLOWDER_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}
                  key: clowder-secret
{{- if .Values.storage.s3 }}
            - name: S3_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}
                  key: s3-access-key
            - name: S3_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}
                  key: s3-secret-key
{{- else if .Values.minio.enabled }}
            - name: S3_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}-minio
                  key: access-key
            - name: S3_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}-minio
                  key: secret-key
{{- end }}
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}
                  key: rabbitmq-uri
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder.fullname" . }}
                  key: mongodb-uri
          volumeMounts:
            - name: custom-volume
              mountPath: /home/clowder/custom
{{- if not (or .Values.storage.s3 .Values.minio.enabled) }}
            - name: data
              mountPath: /home/clowder/data
{{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: clowder
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: {{ .Values.ingress.path }}healthz
              port: clowder
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: custom-volume
          # TODO how to deal with custom previews/javascript etc.
          configMap:
            name: {{ include "clowder.fullname" . }}-config
            items:
              - key: custom.conf
                path: custom.conf
              - key: play.plugins
                path: play.plugins
        {{- if not (or .Values.storage.s3 .Values.minio.enabled) }}
        - name: data
          persistentVolumeClaim:
            {{- if $.Values.persistence.existingClaim }}
            claimName: {{ $.Values.persistence.existingClaim }}
            {{- else }}
            claimName: {{ include "clowder.fullname" . }}-data
            {{- end }}
        {{- end }}
        {{- with .Values.extraVolumes }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
